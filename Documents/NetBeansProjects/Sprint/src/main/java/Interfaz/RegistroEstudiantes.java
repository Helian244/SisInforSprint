/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Interfaz;

/**
 *
 * @author Usuario
 */
import Codigo.Conexion;
import Interfaz.MenuPrincipal;
import java.sql.CallableStatement;
import javax.swing.JOptionPane;
import java.sql.Connection;
import java.sql.Statement;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Date;

public class RegistroEstudiantes extends javax.swing.JFrame {
    Conexion objetoCon = new Conexion();
    Connection conectar = objetoCon.establecerConexion();
    MenuPrincipal men;
    /**
     * Creates new form RegistroEstudiantes
     */
    public RegistroEstudiantes(MenuPrincipal men) {
        this.men = men;
        initComponents();
        this.setLocationRelativeTo(null);
    }
    public int existeEstudiante(String nom, String apP, String apM,
                                String ci, String dia, String mes, String anio){
        int CI = Integer.parseInt(ci);
        int diA = Integer.valueOf(dia);
        int meS = this.conversorMes(mes);
        int aniO = (Integer.valueOf(anio)) - 1900;
        PreparedStatement a = null;
        ResultSet b = null;
        String sql = "SELECT count(idEstudiante) FROM Estudiante where nombreEst = ?";
        Date fech = new java.sql.Date(aniO, meS, diA);
        try{
            a = conectar.prepareStatement(sql);
            a.setString(1,nom);
            b = a.executeQuery();
            if(b.next()){
                return b.getInt(1);
            }
            String sql1 = "SELECT count(idEstudiante) FROM Estudiante where apellidoPaterno = ? and apellidoMaterno = ?";
            a = conectar.prepareStatement(sql);
            a.setString(2,apP);
            a.setString(3,apM);
            b = a.executeQuery();
            if(b.next()){
                return b.getInt(1);
            }
            String sql2 = "SELECT count(idEstudiante) FROM Estudiante where CI = ? and fechaNac = ?";
            a = conectar.prepareStatement(sql2);
            a.setInt(4,CI);
            a.setDate(5, fech);
            b = a.executeQuery();
            if(b.next()){
                return b.getInt(1);
            }
            return 1;
        } catch(SQLException e){
            JOptionPane.showMessageDialog(null, "error: " + e.toString());
            return 1;
        }
    }
    
    
    public int conversorMes(String fecha){
        int res;
        if(fecha == "Enero"){
            res = 0;
        }else{
            if(fecha == "Febrero"){
               res = 1;
            }else{
                if(fecha == "Marzo"){
                   res = 2;
                }else{
                    if(fecha == "Abril"){
                        res = 3;
                    }else{
                        if(fecha == "Mayo"){
                             res = 4;
                        }else{
                            if(fecha == "Junio"){
                                res = 5;
                            }else{
                                if(fecha == "Julio"){
                                    res = 6;
                                }else{
                                    if(fecha == "Agosto"){
                                        res = 7;
                                    }else{
                                        if(fecha == "Septiembre"){
                                            res = 8;
                                        }else{
                                            if(fecha == "Octubre"){
                                                res = 9;
                                            }else{
                                                if(fecha == "Noviembre"){
                                                    res = 10;
                                                }else{
                                                    res = 11;
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                         }
                    }
                }
            }
        }
        return res;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        can = new javax.swing.JButton();
        Ing = new javax.swing.JButton();
        nom = new javax.swing.JLabel();
        apP = new javax.swing.JLabel();
        apM = new javax.swing.JLabel();
        ci = new javax.swing.JLabel();
        ed = new javax.swing.JLabel();
        tit = new javax.swing.JLabel();
        nomV = new javax.swing.JTextField();
        apPV = new javax.swing.JTextField();
        apMV = new javax.swing.JTextField();
        ciV = new javax.swing.JTextField();
        d = new javax.swing.JLabel();
        m = new javax.swing.JLabel();
        a = new javax.swing.JLabel();
        mes = new javax.swing.JComboBox<>();
        dia = new javax.swing.JComboBox<>();
        anio = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        can.setFont(new java.awt.Font("DialogInput", 1, 12)); // NOI18N
        can.setText("Cancelar");
        can.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                canActionPerformed(evt);
            }
        });

        Ing.setFont(new java.awt.Font("DialogInput", 1, 12)); // NOI18N
        Ing.setText("Ingresar");
        Ing.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                IngActionPerformed(evt);
            }
        });

        nom.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        nom.setText("Nombres del Estudiante :");

        apP.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        apP.setText("Apellido Paterno :");

        apM.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        apM.setText("Apellido Materno :");

        ci.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        ci.setText("Carnet de Identidad :");

        ed.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        ed.setText("Fecha de Nacimiento :");

        tit.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        tit.setText("Registro de Estudiantes");

        apMV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                apMVActionPerformed(evt);
            }
        });

        d.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        d.setText("Día:");

        m.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        m.setText("Mes:");

        a.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        a.setText("Año:");

        mes.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        mes.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Enero", "Febrero", "Marzo", "Abril", "Mayo", "Junio", "Julio", "Agosto", "Septiembre", "Octubre", "Noviembre", "Diciembre" }));
        mes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mesActionPerformed(evt);
            }
        });

        dia.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        dia.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));

        anio.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1985", "1986", "1987", "1988", "1989", "1990", "1991", "1992", "1993", "1994", "1995", "1996", "1997", "1998", "1999", "2000", "2001", "2002", "2003", "2004", "2005", "2006", "2007", "2008", "2009" }));
        anio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                anioActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(79, 79, 79)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(nom, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(apP, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(apM, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ci, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ed, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(40, 40, 40)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(ciV, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(apPV, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(nomV, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(apMV, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(d, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(69, 69, 69)
                        .addComponent(m)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(a, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(dia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(37, 37, 37)
                        .addComponent(mes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(29, 29, 29)
                        .addComponent(anio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(16, 16, 16)))
                .addGap(68, 68, 68))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(tit)
                .addGap(202, 202, 202))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(174, 174, 174)
                .addComponent(can)
                .addGap(85, 85, 85)
                .addComponent(Ing)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addComponent(tit)
                .addGap(39, 39, 39)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nom)
                    .addComponent(nomV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(apP)
                    .addComponent(apPV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(apM)
                    .addComponent(apMV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ci)
                    .addComponent(ciV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ed)
                    .addComponent(d)
                    .addComponent(m)
                    .addComponent(a))
                .addGap(26, 26, 26)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(mes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(anio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(can)
                    .addComponent(Ing))
                .addContainerGap(35, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void apMVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_apMVActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_apMVActionPerformed

    private void mesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_mesActionPerformed

    private void IngActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_IngActionPerformed
        String nombreEst = nomV.getText();
        String apellPat = apPV.getText();
        String apellMat = apMV.getText();
        String cI = ciV.getText();
        String ani = anio.getSelectedItem().toString();
        String me = mes.getSelectedItem().toString();
        String di = dia.getSelectedItem().toString();
        if(nombreEst.equals("") || apellPat.equals("") || apellMat.equals("") || cI.equals("")){
            JOptionPane.showMessageDialog(null, "Se detectatron campos vacios, debe llenar par completar la acción");
        }else{
            if(this.existeEstudiante(nombreEst, apellPat, apellMat, cI, ani, me, di) == 0){
                try{
                    System.out.println(cI);
                    int ci = Integer.valueOf(cI);
                    System.out.println(ani);
                    int anioS = (Integer.parseInt(ani)) - 1900;
                    System.out.println(me);
                    int mesS = this.conversorMes(me);
                    System.out.println(di);
                    int diaS = Integer.valueOf(di);
                    Date fech = new java.sql.Date(anioS, mesS, diaS);
                    System.out.println(fech);
                    CallableStatement c = conectar.prepareCall("{call registrarEstudiante(?,?,?,?,?)}");
                    c.setString(1,nombreEst);
                    c.setString(2,apellPat);
                    c.setString(3,apellPat);
                    c.setInt(4, ci);
                    c.setDate(5, fech);
                    c.execute();
                    c.close();
                    JOptionPane.showMessageDialog(null, "Se registro con exito al estudiante");
                }catch(Exception e){
                    JOptionPane.showMessageDialog(null, "error: " + e.toString());
                }
            }else{
                JOptionPane.showMessageDialog(null, "Este estudiante ya se encuentra registrado");
            }
        }
    }//GEN-LAST:event_IngActionPerformed

    private void anioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_anioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_anioActionPerformed

    private void canActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_canActionPerformed
        men.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_canActionPerformed

    /**
     * @param args the command line arguments
     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(RegistroEstudiantes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(RegistroEstudiantes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(RegistroEstudiantes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(RegistroEstudiantes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new RegistroEstudiantes().setVisible(true);
//            }
//        });
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Ing;
    private javax.swing.JLabel a;
    private javax.swing.JComboBox<String> anio;
    private javax.swing.JLabel apM;
    private javax.swing.JTextField apMV;
    private javax.swing.JLabel apP;
    private javax.swing.JTextField apPV;
    private javax.swing.JButton can;
    private javax.swing.JLabel ci;
    private javax.swing.JTextField ciV;
    private javax.swing.JLabel d;
    private javax.swing.JComboBox<String> dia;
    private javax.swing.JLabel ed;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel m;
    private javax.swing.JComboBox<String> mes;
    private javax.swing.JLabel nom;
    private javax.swing.JTextField nomV;
    private javax.swing.JLabel tit;
    // End of variables declaration//GEN-END:variables
}
